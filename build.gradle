plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'

	//spring rest doc
	id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'com.oddsandends'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}

	//spring rest doc
	asciidoctorExt
}

repositories {
	mavenCentral()
}


ext {
	//spring rest doc
	snippetsDir = file('build/generated-snippets')
	asciidocVersion = "2.0.7.RELEASE"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//validation 추가
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Spring boot 3.x 이상에서 QueryDsl 패키지를 정의하는 방법
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// jwt token
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

// ===  QueryDsl 빌드 옵션 (선택) ===
def querydslDir = "$buildDir/generated/querydsl"



test {
	//spring rest doc
	outputs.dir snippetsDir
}

asciidoctor {
	//spring rest doc
	inputs.dir snippetsDir
	configurations 'asciidoctorExt'
	dependsOn test
}


tasks.named('test') {
	useJUnitPlatform()
}

bootJar {
	dependsOn asciidoctor

	copy {
		from asciidoctor.outputDir
		into "src/main/resources/static/docs"
	}
}

jar{
	enabled = false
}